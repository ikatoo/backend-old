name: Test and Deploy from Dev
on:
  push:
    branches:
      - dev
      - ci/*
  
jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 3
    container: node:18.15
    env:
      VITE_PORT: 3000
      PORT: 8000
      HOST: localhost
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DBNAME: postgres
      POSTGRES_PORT: 5432
      POSTGRES_HOSTNAME: postgres

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ci/postgres
      
      # - name: Setup Node
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 18.x

      # ------
      # - name: Install dependencies
      #   run: npm install pg

      # - name: Connect to PostgreSQL
      #   # Runs a script that creates a PostgreSQL table, populates
      #   # the table with data, and then retrieves the data.
      #   run: node client.js
        # Environment variable used by the `client.js` script to create
        # a new PostgreSQL client.
        # env:
        #   # The hostname used to communicate with the PostgreSQL service container
        #   POSTGRES_HOST: postgres
        #   # The default PostgreSQL port
        #   POSTGRES_PORT: 5432

      # ------

      - name: Install Dependencies
        run: npm ci

      - name: Typecheck
        run: npm run typecheck

      - name: Test
        run: npm run test

      - name: Send email when fail tests
        if: ${{ failure() }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.office365.com
          server_port: 587
          username: mckatoo@outlook.com
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: Failed tests
          to: mckatoo@gmail.com
          from: iKatoo Repository
          body: Tests of the repository ${{github.repository}} if failed. Please, verify and fix de code.
        

  deploy:
    name: Deploy
    needs: tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
  
    steps:
      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy
        if: ${{ success() }}
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Send email when fail deploy
        if: ${{ failure() }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.office365.com
          server_port: 587
          username: mckatoo@outlook.com
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: Failed deploy
          to: mckatoo@gmail.com
          from: iKatoo Repository
          body: The deploy of the repository ${{github.repository}} if failed. Please, verify and fix de code.